#:import Factory kivy.factory.Factory

<MainScreen>:
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: 0.2, 0.2, 0.2, 1
        Rectangle:
            pos:self.pos
            size: self.size

    BoxLayout:
        id: menu_bar
        orientation: 'horizontal'
        adaptive_height: False
        size_hint_y: None
        height: 25
        spacing: 10
        
        StartSpinner:
            root: root
        
        Button:
            id: export
            text:'export'
            width: 100
            size_hint_x: None
            on_release: root.export()

    BoxLayout:
        id: manipulation
        orientation: 'horizontal'
        adaptive_height: False
        size_hint_y: None
        height: 40
        spacing: 20

        BoxLayout:
            orientation:'horizontal'
            size_hint_x: None
            width: 600

            Label:
                id: node_name
                text: "Current: XX"
                color: "white"

            TextInput:
                id: class_field
                hint_text:"Label Entry"
                helper_text: "Error Occured"
                helper_text_mode: "on_error"
                max_text_length: 10
                multiline: False
                size_hint_y: None
                height: 37
                padding: 10
            
            LabelSpinner:
                id: label_spinner
                on_text: root.ids.image_grid.on_labelSpinner(self, self.text)
                size_hint_x: None
                width: 100

            Button:
                id:save
                text:'Save'
                on_release: root.ids.image_grid.save()
                background_color: 'black'
                size_hint_x: None
                width: 100
            Button:
                id: mode_change
                text: root.ids.image_grid.modeText
                on_release: root.ids.image_grid.change_save_mode()
                background_color: "black" 
                size_hint_x: None
                width: 100

        
        BoxLayout:
            orientation:'horizontal'
            size_hint_x: None
            width: 200
            canvas.before:
                Color:
                    rgba: app.outline_color
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
            Button:
                id: node_previou
                text: 'Node\n Previous'
                on_release: root.ids.image_grid.node_previous()
                size_hint_x: None
                width: 100
            Button:
                id: node_next
                text: 'Node Next'
                on_release:root.ids.image_grid.node_next()
                size_hint_x: None
                width: 100

        BoxLayout:
            orientation: 'horizontal'
            size_hint_x: None
            width: 200

            Button:
                id:previous
                text:'Page Previous'
                on_release: root.ids.image_grid.page_previous()
                size_hint_x: None
                width: 100
            Button:
                id:next
                text:'Page Next'
                on_release: root.ids.image_grid.page_next()
                size_hint_x: None
                width: 100

        BoxLayout:
            orientation:'horizontal'
            size_hint_x: None
            width: 100

            Button:
                id:remain
                text:"Remain"
                on_release: root.ids.image_grid.show_remain()

    BoxLayout:
        id: main
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center' 
            MyGridLayout:
                root: root
                id: image_grid
                text: ""
                canvas.before:
                    Color:
                        rgba: 0.1, 0.1, 0.1, 1
                    Rectangle:
                        pos:self.pos
                        size: self.size
        BoxLayout:
            orientation: 'vertical'
            size_hint: .2,.2
            pos_hint: {'top': 1}
            canvas.before:
                Color:
                    rgba: 0.2, 0.2, 0.2, 1
                Rectangle:
                    pos:self.pos
                    size: self.size
            Label:
                text: "Preview"
                size_hint_y: None
                height: 15
            Image:
                id: preview
                source: ""




<ScrollView>:
    MDList:
        background_color: [1,0,1,1]

<MyGridLayout>:
    cols:20
    col_default_width: (self.width - self.spacing[0] * self.cols) / self.cols
    row_default_height: (self.width - self.spacing[0] * self.cols) / self.cols
    row_force_default: True
    col_force_default: True
    padding: dp(4), dp(4)
    spacing: dp(4)

<MDSmartTile>:
    box_color : 0,0,0,0

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
    FileChooserListView:
        id: filechooser

    BoxLayout:
        size_hint_y: None
        height: 30
        Button:
            text: "Cancel"
            on_release: root.cancel()

        Button:
            text: "Load"
            on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

<StartSpinnerOption@SpinnerOption>:


<StartSpinner@Spinner>:
    id: start_spinner
    size_hint_x: None
    width: 200
    text: "start"
    values: "SSL", "SmSL iBOT", "SmSL SwAV", "Load Annotation Data"
    sync_height: True
    option_cls: Factory.get("StartSpinnerOption")
    on_text: self.on_startSpinner(self, self.text)

<LabelSpinner@Spinner>:
    text: "Labels"
    values: []
    sync_height: True

<CreateMargin@BoxLayout>:
    size_hint_x: None 

<YNPopup>:
    FloatLayout:
        Label:
            size_hint: 0.8, 0.6
            pos_hint: {'x': 0.1, 'y':0.4}
            text: root.message

        Button:
            size_hint: 0.4, 0.35
            pos_hint: {'x':0.1, 'y':0.05}
            text: 'Yes'
            on_release: root.dispatch('on_yes')

        Button:
            size_hint: 0.4, 0.35
            pos_hint: {'x':0.5, 'y':0.05}
            text: 'No'
            on_release: root.dispatch('on_no')

<PopupWaiting>:
    FloatLayout:
        Label:
            size_hint: 0.8, 0.6
            pos_hint: {'x': 0.1, 'y':0.4}
            text: root.message

<PopupRaiseError>:
    FloatLayout:
        Label:
            size_hint: 0.8, 0.6
            pos_hint: {'x': 0.1, 'y':0.4}
            text: root.message

        Button:
            size_hint: 0.4, 0.35
            pos_hint: {'x':0.3, 'y':0.05}
            text: 'OK'
            on_release: root.dispatch('on_yes')

<PopupArgumentsforSSL>:
    FloatLayout:
        Label:
            size_hint: 0.8, 0.6
            pos_hint: {'x': 0.1, 'y':0.4}
            text: root.message

        TextInput:
            id:input_data_path
            size_hint: 0.4, 0.2
            pos_hint: {'x':0.1, 'y':0.8}
            hint_text: "dataset path"
            multiline: False
        
        OpenDialogButton:
            parent: root
            text:'open'
            size_hint: 0.15, 0.15
            pos_hint: {'x':0.5, 'y':0.8}

        ArchSpinnerforiBOT:
            id: arch_spinner
            size_hint: 0.3, 0.15
            pos_hint: {'x':0.1, 'y':0.6}
            text: "Model Size"
            values: "vit_small", "vit_base", "vit_large"
        
        WarningLabel:
            id: warning
            parent: root
            size_hint: 0.3, 0.15
            pos_hint: {'x':0.1, 'y':0.4}

        Button:
            size_hint: 0.4, 0.35
            pos_hint: {'x':0.1, 'y':0.05}
            text: 'Run'
            on_release: root.dispatch('on_yes')

        Button:
            size_hint: 0.4, 0.35
            pos_hint: {'x':0.5, 'y':0.05}
            text: 'Cancel'
            on_release: root.dispatch('on_no')

<ArchSpinnerforiBOT@Spinner>

        